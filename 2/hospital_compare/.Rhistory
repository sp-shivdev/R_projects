# correlations
}
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
print(masterlist)
# rm(file, index, df) #remove intermediate variables
#
# complete_list <- data.frame()
#
# for(i in length(masterlist)){
#     nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
#     if(nobs > threshold){
#         complete_list <- rbind(complete_list, c(i, nobs))
#     }
#
# }
#
# correlations <- data.frame()
#
# for(i in length(complete_list)){
#     corre <- cor(masterlist[complete_list[i, 1]][, 2], masterlist[complete_list[i, 1]][, 3], method = c("pearson", "kendall", "spearman"))
#     correlations <- rbind(correlations, corre)
# }
#
# correlations
}
corr("E:/DS_C/R_projects/1/data_specdata", 400)
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
print(masterlist)
rm(file, index, df) #remove intermediate variables
complete_list <- data.frame()
for(i in length(masterlist)){
nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
if(nobs > threshold){
complete_list <- rbind(complete_list, c(i, nobs))
}
}
# correlations <- data.frame()
#
# for(i in length(complete_list)){
#     corre <- cor(masterlist[complete_list[i, 1]][, 2], masterlist[complete_list[i, 1]][, 3], method = c("pearson", "kendall", "spearman"))
#     correlations <- rbind(correlations, corre)
# }
#
# correlations
}
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
complete_list <- data.frame()
for(i in length(masterlist)){
nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
if(nobs > threshold){
complete_list <- rbind(complete_list, c(i, nobs))
}
}
complete_list
# correlations <- data.frame()
#
# for(i in length(complete_list)){
#     corre <- cor(masterlist[complete_list[i, 1]][, 2], masterlist[complete_list[i, 1]][, 3], method = c("pearson", "kendall", "spearman"))
#     correlations <- rbind(correlations, corre)
# }
#
# correlations
}
corr("E:/DS_C/R_projects/1/data_specdata", 400)
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
complete_list <- data.frame()
for(i in length(masterlist)){
nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
if(nobs > threshold){
complete_list <- rbind(complete_list, c(i, nobs))
}
complete_list
}
# correlations <- data.frame()
#
# for(i in length(complete_list)){
#     corre <- cor(masterlist[complete_list[i, 1]][, 2], masterlist[complete_list[i, 1]][, 3], method = c("pearson", "kendall", "spearman"))
#     correlations <- rbind(correlations, corre)
# }
#
# correlations
}
corr("E:/DS_C/R_projects/1/data_specdata", 400)
corr("E:/DS_C/R_projects/1/data_specdata")
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
complete_list <- data.frame()
for(i in length(masterlist)){
nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
if(nobs > threshold){
complete_list <- rbind(complete_list, c(i, nobs))
}
}
complete_list
# correlations <- data.frame()
#
# for(i in length(complete_list)){
#     corre <- cor(masterlist[complete_list[i, 1]][, 2], masterlist[complete_list[i, 1]][, 3], method = c("pearson", "kendall", "spearman"))
#     correlations <- rbind(correlations, corre)
# }
#
# correlations
}
corr("E:/DS_C/R_projects/1/data_specdata")
complete <- function(directory, ids){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
complete_cases <- complete.cases(masterlist)
complete_cases
}
complete("E:/DS_C/R_projects/1/data_specdata", 1:330)
complete <- function(directory, ids){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
complete_cases <- masterlist[complete.cases(masterlist), ]
complete_cases
}
complete("E:/DS_C/R_projects/1/data_specdata", 1:330)
complete <- function(directory, ids){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
complete_cases <- masterlist[complete.cases(masterlist), ]
}
rm(file, index, df) #remove intermediate variables
complete_cases
}
complete("E:/DS_C/R_projects/1/data_specdata", 1:330)
complete <- function(directory, ids){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
complete_cases <- masterlist[[complete.cases(masterlist), ]]
}
rm(file, index, df) #remove intermediate variables
complete_cases
}
complete("E:/DS_C/R_projects/1/data_specdata", 1:330)
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
corr_vect <- NULL
for (i in length(masterlist)){
nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
if(nobs > threshold){
corr_vect <- c(corr_vect, cor(masterlist[[i]][, "sulfate"], masterlist[[i]][, "nitrate"]))
}
}
corr_vect
}
corr("E:/DS_C/R_projects/1/data_specdata", 150)
corr("E:/DS_C/R_projects/1/data_specdata", 0)
corr("E:/DS_C/R_projects/1/data_specdata", 12)
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
corr_vect <- NULL
for (i in 1:332){
nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
if(nobs > threshold){
corr_vect <- c(corr_vect, cor(masterlist[[i]][, "sulfate"], masterlist[[i]][, "nitrate"]))
}
}
corr_vect
}
corr("E:/DS_C/R_projects/1/data_specdata", 12)
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
corr_vect <- NULL
for (i in 1:332){
nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
if(nobs > threshold){
corr_vect <- c(corr_vect, cor(masterlist[[i]][complete.cases(masterlist[[i]]), "sulfate"], masterlist[[i]][complete.cases(masterlist[[i]]), "nitrate"]))
}
}
corr_vect
}
corr("E:/DS_C/R_projects/1/data_specdata", 12)
corr("E:/DS_C/R_projects/1/data_specdata", 150)
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
corr_vect <- NULL
for (i in length(masterlist)){
nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
if(nobs > threshold){
corr_vect <- c(corr_vect, cor(masterlist[[i]][complete.cases(masterlist[[i]]), "sulfate"], masterlist[[i]][complete.cases(masterlist[[i]]), "nitrate"]))
}
}
corr_vect
}
corr("E:/DS_C/R_projects/1/data_specdata", 150)
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
corr_vect <- NULL
for (i in 1:332){
nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
if(nobs > threshold){
corr_vect <- c(corr_vect, cor(masterlist[[i]][complete.cases(masterlist[[i]]), "sulfate"], masterlist[[i]][complete.cases(masterlist[[i]]), "nitrate"]))
}
}
corr_vect
}
corr("E:/DS_C/R_projects/1/data_specdata", 150)
corr <- function(directory, threshold = 0){
setwd(directory)
files = list.files(pattern = "*.csv") #list of csv files to be sourced
masterlist <- list(NULL)
index = 1
for (file in files){
df <- data.frame(read.csv(file = file))
masterlist[[index]] <- df
index = index + 1
}
rm(file, index, df) #remove intermediate variables
corr_vect <- NULL
for (i in 1:length(masterlist)){
nobs <- nrow(masterlist[[i]][complete.cases(masterlist[[i]]), ])
if(nobs > threshold){
corr_vect <- c(corr_vect, cor(masterlist[[i]][complete.cases(masterlist[[i]]), "sulfate"], masterlist[[i]][complete.cases(masterlist[[i]]), "nitrate"]))
}
}
corr_vect
}
corr("E:/DS_C/R_projects/1/data_specdata", 150)
setwd("E:/DS_C/R_projects/2/rprog_data_ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
nrow(outcome)
names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
rankall<- function(outcome, num = "best"){
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if((outcome %in% c("heart attack", "heart failure", "pneumonia")) == FALSE){
stop(print("invalid outcome"))
}
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else{
colnum <- 23
}
sub_data[, colnum] <- as.numeric(sub_data[, colnum])
sub_data = sub_data[!is.na(sub_data[, colnum]), ]
split_data = split(sub_data, sub_data$State)
result = lapply(split_data, function(x, num){
x = x[order(x[, colnum], x$Hospital.Name), ]
if(num == "best") {
return (x$Hospital.Name[1])
}
else if(num == "worst"){
return (x$Hospital.Name[nrow(x)])
}
else{
return (x$Hospital.Name[num])
}
}
return(result)
}
rankall<- function(outcome, num = "best"){
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if((outcome %in% c("heart attack", "heart failure", "pneumonia")) == FALSE){
stop(print("invalid outcome"))
}
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else{
colnum <- 23
}
sub_data[, colnum] <- as.numeric(sub_data[, colnum])
sub_data = sub_data[!is.na(sub_data[, colnum]), ]
split_data = split(sub_data, sub_data$State)
result = lapply(split_data, function(x, num){
x = x[order(x[, colnum], x$Hospital.Name), ]
if(num == "best") {
return (x$Hospital.Name[1])
}
else if(num == "worst"){
return (x$Hospital.Name[nrow(x)])
}
else{
return (x$Hospital.Name[num])
}
}
return(result)
}
rankall<- function(outcome, num = "best"){
library(dplyr)
library(magrittr)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if((outcome %in% c("heart attack", "heart failure", "pneumonia")) == FALSE){
stop(print("invalid outcome"))
}
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else{
colnum <- 23
}
sub_data[, colnum] <- as.numeric(sub_data[, colnum])
sub_data = sub_data[!is.na(sub_data[, colnum]), ]
split_data = split(sub_data, sub_data$State)
result = lapply(split_data, function(x, num){
x = x[order(x[, colnum], x$Hospital.Name), ]
if(num == "best"){
return (x$Hospital.Name[1])
}
else if(num == "worst"){
return (x$Hospital.Name[nrow(x)])
}
else{
return (x$Hospital.Name[num])
}
}, num)
return(data.frame(hospital=unlist(result), state=names(result)))
}
head(rankall("heart attack", "worst"))
rankall<- function(outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if((outcome %in% c("heart attack", "heart failure", "pneumonia")) == FALSE){
stop(print("invalid outcome"))
}
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else{
colnum <- 23
}
sub_data[, colnum] <- as.numeric(sub_data[, colnum])
sub_data = sub_data[!is.na(sub_data[, colnum]), ]
split_data = split(sub_data, sub_data$State)
result = lapply(split_data, function(x, num){
x = x[order(x[, colnum], x$Hospital.Name), ]
if(num == "best"){
return (x$Hospital.Name[1])
}
else if(num == "worst"){
return (x$Hospital.Name[nrow(x)])
}
else{
return (x$Hospital.Name[num])
}
}, num)
return(data.frame(hospital=unlist(result), state=names(result)))
}
head(rankall("heart attack", "worst"))
rankall<- function(outcome, num = "best"){
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if((outcome %in% c("heart attack", "heart failure", "pneumonia")) == FALSE){
stop(print("invalid outcome"))
}
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else{
colnum <- 23
}
data[, colnum] <- as.numeric(data[, colnum])
data = data[!is.na(data[, colnum]), ]
split_data = split(data, data$State)
result = lapply(split_data, function(x, num){
x = x[order(x[, colnum], x$Hospital.Name), ]
if(num == "best"){
return (x$Hospital.Name[1])
}
else if(num == "worst"){
return (x$Hospital.Name[nrow(x)])
}
else{
return (x$Hospital.Name[num])
}
}, num)
return(data.frame(hospital=unlist(result), state=names(result)))
}
head(rankall("heart attack", "worst"))
